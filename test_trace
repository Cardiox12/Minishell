===============
result test for :     cat makefile
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat makefile | wc -l
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat makefile < main.c | grep include
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat makefile < main.c | grep include | grep inc < includes/eval.h
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     grep a < test_files/aaa < test_files/bbb
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat makefile < main.c | grep include | grep inc < includes/eval.h | wc -l
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     env | grep E | wc -l
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     pwd
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     env | grep PATH | grep usr | grep bin | wc -l; echo hello; grep b < test_files/bbb | wc -l
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     env | grep PATH | grep usr | grep bin; echo hello; grep b < test_files/bbb | wc -l
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat makefile > output2 > output3
minishell's command: cat makefile > miniout2 > miniout3 > miniout1
bash's command: cat makefile > realout2 > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat makefile > output2 > output3 | grep include
minishell's command: cat makefile > miniout2 > miniout3 | grep include > miniout1
bash's command: cat makefile > realout2 > realout3 | grep include > realout1
minishell exits with success
1,3d0
< INC_DIR		= includes
< FT_INC_DIR	= $(LIBFT_DIR)/includes
< include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk
[38;5;160mfailure[0m

minishell's output1:
INC_DIR		= includes
FT_INC_DIR	= $(LIBFT_DIR)/includes
include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk

bash's output1:

minishell's output3:
# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: bbellavi <bbellavi@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#
bash's output3:
# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: bbellavi <bbellavi@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/09/29 01:50:06 by tlucille          #+#    #+#              #
#    Updated: 2020/11/23 15:31:14 by bbellavi         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

CC			= gcc
CFLAGS		= -Wall -Werror -Wextra

EXT_DIR		= externals
INC_DIR		= includes
SRC_DIR		= srcs

LIBFT_DIR	= $(EXT_DIR)/libft
FT_INC_DIR	= $(LIBFT_DIR)/includes

LEXER_DIR	= $(SRC_DIR)/lexer
PARSE_DIR	= $(SRC_DIR)/parser
EVAL_DIR	= $(SRC_DIR)/eval
READ_DIR	= $(SRC_DIR)/reader
OUTPUT_DIR	= $(SRC_DIR)/output
BUILTIN_DIR	= $(SRC_DIR)/builtins

LIBFT_NAME	= libft.a
NAME		= minishell

SRCS		= main.c
SRCS		+= signal_handler.c

include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk

.PHONY: all clean fclean

all: $(NAME)

$(NAME): $(SRCS)
	@make -C $(LIBFT_DIR)
	@mv $(LIBFT_DIR)/$(LIBFT_NAME) .
	@$(CC) $(CFLAGS) -o $(NAME) $(SRCS) $(LIBFT_NAME) -I$(INC_DIR) -I$(FT_INC_DIR)
	
clean:
	@rm -f $(LIBFT_NAME)
	@make -C $(LIBFT_DIR) clean 

fclean: clean
	@rm -f $(NAME)
	@rm -rf $(NAME).dSYM
	@make -C $(LIBFT_DIR) fclean

re: fclean all	
===============

===============
result test for :     cat makefile > output2 > output3 < main.c | grep include
minishell's command: cat makefile > miniout2 > miniout3 < main.c | grep include > miniout1
bash's command: cat makefile > realout2 > realout3 < main.c | grep include > realout1
minishell exits with success
1,3d0
< INC_DIR		= includes
< FT_INC_DIR	= $(LIBFT_DIR)/includes
< include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk
[38;5;160mfailure[0m

minishell's output1:
INC_DIR		= includes
FT_INC_DIR	= $(LIBFT_DIR)/includes
include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk

bash's output1:

minishell's output3:

bash's output3:
# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: bbellavi <bbellavi@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/09/29 01:50:06 by tlucille          #+#    #+#              #
#    Updated: 2020/11/23 15:31:14 by bbellavi         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

CC			= gcc
CFLAGS		= -Wall -Werror -Wextra

EXT_DIR		= externals
INC_DIR		= includes
SRC_DIR		= srcs

LIBFT_DIR	= $(EXT_DIR)/libft
FT_INC_DIR	= $(LIBFT_DIR)/includes

LEXER_DIR	= $(SRC_DIR)/lexer
PARSE_DIR	= $(SRC_DIR)/parser
EVAL_DIR	= $(SRC_DIR)/eval
READ_DIR	= $(SRC_DIR)/reader
OUTPUT_DIR	= $(SRC_DIR)/output
BUILTIN_DIR	= $(SRC_DIR)/builtins

LIBFT_NAME	= libft.a
NAME		= minishell

SRCS		= main.c
SRCS		+= signal_handler.c

include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk

.PHONY: all clean fclean

all: $(NAME)

$(NAME): $(SRCS)
	@make -C $(LIBFT_DIR)
	@mv $(LIBFT_DIR)/$(LIBFT_NAME) .
	@$(CC) $(CFLAGS) -o $(NAME) $(SRCS) $(LIBFT_NAME) -I$(INC_DIR) -I$(FT_INC_DIR)
	
clean:
	@rm -f $(LIBFT_NAME)
	@make -C $(LIBFT_DIR) clean 

fclean: clean
	@rm -f $(NAME)
	@rm -rf $(NAME).dSYM
	@make -C $(LIBFT_DIR) fclean

re: fclean all	
===============

===============
result test for :     cat makefile > output2 > output3 < main.c | grep include < main.c
minishell's command: cat makefile > miniout2 > miniout3 < main.c | grep include < main.c > miniout1
bash's command: cat makefile > realout2 > realout3 < main.c | grep include < main.c > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat makefile > output2 < main.c | grep include > output3
minishell's command: cat makefile > miniout2 < main.c | grep include > miniout3 > miniout1
bash's command: cat makefile > realout2 < main.c | grep include > realout3 > realout1
minishell exits with success
1,3d0
< INC_DIR		= includes
< FT_INC_DIR	= $(LIBFT_DIR)/includes
< include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk
[38;5;160mfailure[0m

minishell's output1:
INC_DIR		= includes
FT_INC_DIR	= $(LIBFT_DIR)/includes
include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk

bash's output1:

minishell's output2:
# **********
bash's output2:
# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: bbellavi <bbellavi@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/09/29 01:50:06 by tlucille          #+#    #+#              #
#    Updated: 2020/11/23 15:31:14 by bbellavi         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

CC			= gcc
CFLAGS		= -Wall -Werror -Wextra

EXT_DIR		= externals
INC_DIR		= includes
SRC_DIR		= srcs

LIBFT_DIR	= $(EXT_DIR)/libft
FT_INC_DIR	= $(LIBFT_DIR)/includes

LEXER_DIR	= $(SRC_DIR)/lexer
PARSE_DIR	= $(SRC_DIR)/parser
EVAL_DIR	= $(SRC_DIR)/eval
READ_DIR	= $(SRC_DIR)/reader
OUTPUT_DIR	= $(SRC_DIR)/output
BUILTIN_DIR	= $(SRC_DIR)/builtins

LIBFT_NAME	= libft.a
NAME		= minishell

SRCS		= main.c
SRCS		+= signal_handler.c

include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk

.PHONY: all clean fclean

all: $(NAME)

$(NAME): $(SRCS)
	@make -C $(LIBFT_DIR)
	@mv $(LIBFT_DIR)/$(LIBFT_NAME) .
	@$(CC) $(CFLAGS) -o $(NAME) $(SRCS) $(LIBFT_NAME) -I$(INC_DIR) -I$(FT_INC_DIR)
	
clean:
	@rm -f $(LIBFT_NAME)
	@make -C $(LIBFT_DIR) clean 

fclean: clean
	@rm -f $(NAME)
	@rm -rf $(NAME).dSYM
	@make -C $(LIBFT_DIR) fclean

re: fclean all	
===============

===============
result test for :     cat makefile > output2 < main.c | grep include | grep inc < main.c > output3
minishell's command: cat makefile > miniout2 < main.c | grep include | grep inc < main.c > miniout3 > miniout1
bash's command: cat makefile > realout2 < main.c | grep include | grep inc < main.c > realout3 > realout1
minishell exits with success
1c1,56
< # **
\ No newline at end of file
---
> # **************************************************************************** #
> #                                                                              #
> #                                                         :::      ::::::::    #
> #    Makefile                                           :+:      :+:    :+:    #
> #                                                     +:+ +:+         +:+      #
> #    By: bbellavi <bbellavi@student.42.fr>          +#+  +:+       +#+         #
> #                                                 +#+#+#+#+#+   +#+            #
> #    Created: 2020/09/29 01:50:06 by tlucille          #+#    #+#              #
> #    Updated: 2020/11/23 15:31:14 by bbellavi         ###   ########.fr        #
> #                                                                              #
> # **************************************************************************** #
> 
> CC			= gcc
> CFLAGS		= -Wall -Werror -Wextra
> 
> EXT_DIR		= externals
> INC_DIR		= includes
> SRC_DIR		= srcs
> 
> LIBFT_DIR	= $(EXT_DIR)/libft
> FT_INC_DIR	= $(LIBFT_DIR)/includes
> 
> LEXER_DIR	= $(SRC_DIR)/lexer
> PARSE_DIR	= $(SRC_DIR)/parser
> EVAL_DIR	= $(SRC_DIR)/eval
> READ_DIR	= $(SRC_DIR)/reader
> OUTPUT_DIR	= $(SRC_DIR)/output
> BUILTIN_DIR	= $(SRC_DIR)/builtins
> 
> LIBFT_NAME	= libft.a
> NAME		= minishell
> 
> SRCS		= main.c
> SRCS		+= signal_handler.c
> 
> include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk
> 
> .PHONY: all clean fclean
> 
> all: $(NAME)
> 
> $(NAME): $(SRCS)
> 	@make -C $(LIBFT_DIR)
> 	@mv $(LIBFT_DIR)/$(LIBFT_NAME) .
> 	@$(CC) $(CFLAGS) -o $(NAME) $(SRCS) $(LIBFT_NAME) -I$(INC_DIR) -I$(FT_INC_DIR)
> 	
> clean:
> 	@rm -f $(LIBFT_NAME)
> 	@make -C $(LIBFT_DIR) clean 
> 
> fclean: clean
> 	@rm -f $(NAME)
> 	@rm -rf $(NAME).dSYM
> 	@make -C $(LIBFT_DIR) fclean
> 
> re: fclean all	
[38;5;160mfailure[0m

minishell's output2:
# **
bash's output2:
# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: bbellavi <bbellavi@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/09/29 01:50:06 by tlucille          #+#    #+#              #
#    Updated: 2020/11/23 15:31:14 by bbellavi         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

CC			= gcc
CFLAGS		= -Wall -Werror -Wextra

EXT_DIR		= externals
INC_DIR		= includes
SRC_DIR		= srcs

LIBFT_DIR	= $(EXT_DIR)/libft
FT_INC_DIR	= $(LIBFT_DIR)/includes

LEXER_DIR	= $(SRC_DIR)/lexer
PARSE_DIR	= $(SRC_DIR)/parser
EVAL_DIR	= $(SRC_DIR)/eval
READ_DIR	= $(SRC_DIR)/reader
OUTPUT_DIR	= $(SRC_DIR)/output
BUILTIN_DIR	= $(SRC_DIR)/builtins

LIBFT_NAME	= libft.a
NAME		= minishell

SRCS		= main.c
SRCS		+= signal_handler.c

include $(READ_DIR)/module.mk $(LEXER_DIR)/module.mk $(PARSE_DIR)/module.mk $(BUILTIN_DIR)/module.mk $(EVAL_DIR)/module.mk $(OUTPUT_DIR)/module.mk

.PHONY: all clean fclean

all: $(NAME)

$(NAME): $(SRCS)
	@make -C $(LIBFT_DIR)
	@mv $(LIBFT_DIR)/$(LIBFT_NAME) .
	@$(CC) $(CFLAGS) -o $(NAME) $(SRCS) $(LIBFT_NAME) -I$(INC_DIR) -I$(FT_INC_DIR)
	
clean:
	@rm -f $(LIBFT_NAME)
	@make -C $(LIBFT_DIR) clean 

fclean: clean
	@rm -f $(NAME)
	@rm -rf $(NAME).dSYM
	@make -C $(LIBFT_DIR) fclean

re: fclean all	
===============

===============
result test for :     cat makefile < main.c | grep include > output2 | grep inc < main.c > output3
minishell's command: cat makefile < main.c | grep include > miniout2 | grep inc < main.c > miniout3 > miniout1
bash's command: cat makefile < main.c | grep include > realout2 | grep inc < main.c > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat makefile < main.c | grep include | grep inc < main.c > output3 > output2
minishell's command: cat makefile < main.c | grep include | grep inc < main.c > miniout3 > miniout2 > miniout1
bash's command: cat makefile < main.c | grep include | grep inc < main.c > realout3 > realout2 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat test_files/aaa | grep a | grep b < test_files/ccc > output3 > output2
minishell's command: cat test_files/aaa | grep a | grep b < test_files/ccc > miniout3 > miniout2 > miniout1
bash's command: cat test_files/aaa | grep a | grep b < test_files/ccc > realout3 > realout2 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat test_files/aaa | grep a > output3 | grep b < test_files/ccc | grep a < test_files/aaa > output2
minishell's command: cat test_files/aaa | grep a > miniout3 | grep b < test_files/ccc | grep a < test_files/aaa > miniout2 > miniout1
bash's command: cat test_files/aaa | grep a > realout3 | grep b < test_files/ccc | grep a < test_files/aaa > realout2 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     cat test_files/aaa | grep a > output3 | grep b < test_files/ccc > output2 | grep a < test_files/aaa < test_files/bbb
minishell's command: cat test_files/aaa | grep a > miniout3 | grep b < test_files/ccc > miniout2 | grep a < test_files/aaa < test_files/bbb > miniout1
bash's command: cat test_files/aaa | grep a > realout3 | grep b < test_files/ccc > realout2 | grep a < test_files/aaa < test_files/bbb > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     grep b < test_files/ccc| grep a < test_files/aaa < test_files/bbb > output2 > output3
minishell's command: grep b < test_files/ccc| grep a < test_files/aaa < test_files/bbb > miniout2 > miniout3 > miniout1
bash's command: grep b < test_files/ccc| grep a < test_files/aaa < test_files/bbb > realout2 > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo hello > output2 | grep a < test_files/aaa > output3
minishell's command: echo hello > miniout2 | grep a < test_files/aaa > miniout3 > miniout1
bash's command: echo hello > realout2 | grep a < test_files/aaa > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo hello > output2 > output3
minishell's command: echo hello > miniout2 > miniout3 > miniout1
bash's command: echo hello > realout2 > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     grep a < test_files/aaa < test_files/bbb > output2 > output3
minishell's command: grep a < test_files/aaa < test_files/bbb > miniout2 > miniout3 > miniout1
bash's command: grep a < test_files/aaa < test_files/bbb > realout2 > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     pwd > output2 > output3
minishell's command: pwd > miniout2 > miniout3 > miniout1
bash's command: pwd > realout2 > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     pwd > output2 | echo gno > output3
minishell's command: pwd > miniout2 | echo gno > miniout3 > miniout1
bash's command: pwd > realout2 | echo gno > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     env | grep PATH > output2 | echo bababa > output3
minishell's command: env | grep PATH > miniout2 | echo bababa > miniout3 > miniout1
bash's command: env | grep PATH > realout2 | echo bababa > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "berniesanders" | grep aaa < test_files/aaa > output2 | echo bababa > output3
minishell's command: echo "berniesanders" | grep aaa < test_files/aaa > miniout2 | echo bababa > miniout3 > miniout1
bash's command: echo "berniesanders" | grep aaa < test_files/aaa > realout2 | echo bababa > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "berniesanders" | grep aaa < test_files/aaa > output2 | echo hello > output3
minishell's command: echo "berniesanders" | grep aaa < test_files/aaa > miniout2 | echo hello > miniout3 > miniout1
bash's command: echo "berniesanders" | grep aaa < test_files/aaa > realout2 | echo hello > realout3 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     env ; echo hello; export TEST="test"; echo $TEST | grep t | wc -l > output2 > output3 ; cat output2
minishell's command: env ; echo hello; export TEST="test"; echo $TEST | grep t | wc -l > miniout2 > miniout3 ; cat miniout2 > miniout1
bash's command: env ; echo hello; export TEST="test"; echo $TEST | grep t | wc -l > realout2 > realout3 ; cat realout2 > realout1
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "$USER"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "$I_DO_NOT_EXISTS"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "$foo"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Hello $USER"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Im in $HOME"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Hello $USER !"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Im in $HOME !"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Hello $USER long string after"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Im in $HOME long string after"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "This variable does not exists $I_DO_NOT_EXISTS"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "This variable does not exists $foo"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "This variable does not exists $I_DO_NOT_EXISTS long string after"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "This variable does not exists $foo long string after"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "$USER, $HOME"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Hello $USER, you are in $HOME"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Hello $USER, you are in $HOME long string after"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "$foo, $HOME"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "$HOME, $foo"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     echo "Hello $USER, this variable does not exists $foo"
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :     <ezfef
minishell exits with success
[38;5;160mfailure[0m

minishell's output:

eval's output:

===============

===============
result test for :     <zefzef efzef
minishell exits with success
[38;5;160mfailure[0m

minishell's output:

eval's output:

===============

===============
result test for :     <zefzef grep
minishell exits with success
[38;5;160mfailure[0m

minishell's output:

eval's output:

===============

===============
result test for :     <main.c grep includes
minishell exits with success
[38;5;40msuccess[0m
===============

===============
result test for :      grep < main.c includes
minishell exits with success
[38;5;40msuccess[0m
===============

